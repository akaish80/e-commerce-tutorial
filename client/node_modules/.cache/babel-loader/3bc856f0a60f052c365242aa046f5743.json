{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyAcfP8_1wQ8c3atc5WnrCXCto8Gi1v2FZ0',\n  authDomain: 'crwn-db-6711a.firebaseapp.com',\n  databaseURL: 'https://crwn-db-6711a.firebaseio.com',\n  projectId: 'crwn-db-6711a',\n  storageBucket: 'crwn-db-6711a.appspot.com',\n  messagingSenderId: '243694284954',\n  appId: '1:243694284954:web:c5158149a41adfbd976f23',\n  measurementId: 'G-GZHEL1WZKV'\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  } // eslint-disable-next-line consistent-return\n\n\n  return userRef;\n};\nexport const addCollectionAndDocument = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/ctsuser1/Documents/ArunWorkspace/e_commerce_web_site/crwn-clothing/src/firebase/firbase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocument","collectionKey","objectsToAdd","collectionRef","collection","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAYAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF,GApB0E,CAqB3E;;;AACA,SAAOd,OAAP;AACD,CAvBM;AAyBP,OAAO,MAAMe,wBAAwB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACvE,QAAMC,aAAa,GAAGtB,SAAS,CAACuB,UAAV,CAAqBH,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ;AACD,CAHM;AAMP,MAAME,QAAQ,GAAG,IAAIpC,QAAQ,CAACW,IAAT,CAAc0B,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM7B,IAAI,CAAC8B,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst config = {\n  apiKey: 'AIzaSyAcfP8_1wQ8c3atc5WnrCXCto8Gi1v2FZ0',\n  authDomain: 'crwn-db-6711a.firebaseapp.com',\n  databaseURL: 'https://crwn-db-6711a.firebaseio.com',\n  projectId: 'crwn-db-6711a',\n  storageBucket: 'crwn-db-6711a.appspot.com',\n  messagingSenderId: '243694284954',\n  appId: '1:243694284954:web:c5158149a41adfbd976f23',\n  measurementId: 'G-GZHEL1WZKV',\n};\n\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n  // eslint-disable-next-line consistent-return\n  return userRef;\n};\n\nexport const addCollectionAndDocument = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\n\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}