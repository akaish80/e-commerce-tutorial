{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\nimport { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firbase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('LOL');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // collectionRef.get().then((snapshot) => {\n  //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionMap));\n  // }).catch((error) => dispatch(fetchCollectionsFailure(`Error ${error.message}`)));\n  // };\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/ctsuser1/Documents/ArunWorkspace/e_commerce_web_site/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,8BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC,CANuC,CASvC;AACA;AACA;AACA;AACF;AACC;AAED,OAAO,UAAUG,qBAAV,GAAkC;AACvC,QAAMf,SAAS,CACbE,eAAe,CAACc,uBADH,EAEbT,qBAFa,CAAf;AAID","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { takeEvery, call } from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firbase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('LOL');\n\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\n\n  // collectionRef.get().then((snapshot) => {\n  //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //   dispatch(fetchCollectionsSuccess(collectionMap));\n  // }).catch((error) => dispatch(fetchCollectionsFailure(`Error ${error.message}`)));\n// };\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync,\n  );\n}\n"]},"metadata":{},"sourceType":"module"}