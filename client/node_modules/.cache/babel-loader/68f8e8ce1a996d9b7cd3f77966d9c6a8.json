{"ast":null,"code":"var _jsxFileName = \"/Users/ctsuser1/Documents/ArunWorkspace/e_commerce_web_site/crwn-clothing/src/components/sign-in/sign-in-component.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from '../../firebase/firbase.utils';\nimport { googleSignInStart } from '../../redux/user/user.action';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(SignInContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(SignInTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/ctsuser1/Documents/ArunWorkspace/e_commerce_web_site/crwn-clothing/src/components/sign-in/sign-in-component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, signInWithGoogle } from '../../firebase/firbase.utils';\n\nimport {googleSignInStart} from '../../redux/user/user.action';\n\nimport {\n SignInContainer,\n SignInTitle,\n ButtonsBarContainer\n} from './sign-in.styles';\n\nclass SignIn extends Component {\n constructor(props) {\n  super(props);\n  this.state = {\n   email: '',\n   password: ''\n  }\n }\n\n handleSubmit = async event => {\n  event.preventDefault();\n\n  const { email, password } = this.state;\n\n  try {\n   await auth.signInWithEmailAndPassword(email, password);\n\n   this.setState({\n    email: '',\n    password: ''\n   });\n  } catch (error) {\n   console.log(error);\n\n  }\n\n }\n\n handleChange = event => {\n  const { value, name } = event.target;\n  this.setState({ [name]: value });\n }\n\n render() {\n      const {googleSignInStart} =this.props;\n  return (\n   <SignInContainer>\n    <SignInTitle>I already have an account</SignInTitle>\n    <span>Sign in with your email and password</span>\n\n    <form onSubmit={this.handleSubmit}>\n     <FormInput\n      name='email'\n      type='email'\n      handleChange={this.handleChange}\n      value={this.state.email}\n      label='email'\n      required\n     />\n     <FormInput\n      name='password'\n      type='password'\n      value={this.state.password}\n      handleChange={this.handleChange}\n      label='password'\n      required\n     />\n     <ButtonsBarContainer>\n      <CustomButton type='submit'> Sign in </CustomButton>\n      <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n       Sign in with Google\n            </CustomButton>\n     </ButtonsBarContainer>\n    </form>\n   </SignInContainer>\n  );\n }\n}\n\nconst mapDispatchToProps = dispatch => ({\n     googleSignInStart: () => dispatch(googleSignInStart())\n})\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}